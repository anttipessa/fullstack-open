{"version":3,"sources":["components/Person.js","components/Filter.js","components/Form.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","name","number","del","onClick","Filter","searchValue","handleSearchChange","value","onChange","Form","submit","nameChange","numberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","notification","className","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchValue","setMessage","useEffect","personsService","initial","printMessage","setTimeout","filterPersons","filter","person","toLowerCase","includes","event","target","preventDefault","personObject","find","p","window","confirm","returnedPerson","map","catch","error","concat","i","key","returnedNote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46a8195f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ name, number, del }) => {\r\n  return (\r\n  <p>{name} {number} <button  onClick={del}>delete</button></p>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({ searchValue, handleSearchChange }) => {\r\n  return (\r\n    <div>\r\n        filter shown with <input  value={searchValue}\r\n          onChange={handleSearchChange}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({ submit, name, nameChange, number, numberChange  }) => {\r\n  return (\r\n    <form onSubmit={submit}>\r\n    <div>\r\n      name: <input value={name}\r\n        onChange={nameChange} />\r\n    </div>\r\n    <div>number: <input value={number}\r\n      onChange={numberChange} /></div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default Form","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteUser = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteUser, update }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport Filter from './components/Filter'\r\nimport Form from './components/Form'\r\nimport personsService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(initial => {\r\n        setPersons(initial)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (!persons.find(p => p.name === newName)) {\r\n      personsService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          printMessage(`User ${newName} was added`)\r\n        })\r\n        .catch(error => {\r\n          printMessage(`${error.response.data.error} `, 'error')\r\n        })\r\n    } else {\r\n      const result = window.confirm(`${newName} is already added to phonebook, replace number with a new one?`)\r\n      if (result) {\r\n        const id = persons.filter(person => person.name === newName)[0].id\r\n        personsService\r\n          .update(id, personObject)\r\n          .then(returnedPerson => {\r\n            setPersons((persons.map(p => p.id !== id ? p : returnedPerson)))\r\n            printMessage(`User ${newName} number was changed to ${newNumber}`)\r\n          })\r\n          .catch(error => {\r\n            printMessage(`${error.response.data.error} `, 'error')\r\n          })\r\n      }\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deleteUser = (name, id) => {\r\n\r\n    const result = window.confirm(`Delete '${name}' ?`);\r\n    if (result) {\r\n      personsService\r\n        .deleteUser(id)\r\n        .then(returnedNote => {\r\n          setPersons(persons.filter((person => person.name !== name)))\r\n          printMessage(`User ${name} was deleted`)\r\n        })\r\n        .catch(error => {\r\n          printMessage(`${name} was already deleted from server `, 'error')\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const printMessage = (message, type = 'success') => {\r\n    setMessage({ message, type })\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 3000)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  const filterPersons = null ? persons : persons.filter(person => person.name.toLowerCase().includes(searchValue.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={message} />\r\n      <Filter searchValue={searchValue} handleSearchChange={handleSearchChange} />\r\n      <h3>add a new</h3>\r\n      <Form submit={addPerson} name={newName} nameChange={handleNameChange} number={newNumber} numberChange={handleNumberChange} />\r\n      <h3>Numbers</h3>\r\n      {filterPersons.map((person, i) =>\r\n        <Person key={i} name={person.name} number={person.number} del={() => deleteUser(person.name, person.id)} />\r\n      )}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}